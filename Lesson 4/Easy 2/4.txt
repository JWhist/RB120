What could you add to this class to simplify it and remove two methods from the class definition while still maintaining the same functionality?

class BeesWax
  def initialize(type)
    @type = type
  end

  def type
    @type
  end

  def type=(t)
    @type = t
  end

  def describe_type
    puts "I am a #{@type} of Bees Wax"
  end
end

Adding attr_accessor :type will render the getter and setter methods unnecessary in this case because they do not have any additional side effects other than a basic call and set operation.
